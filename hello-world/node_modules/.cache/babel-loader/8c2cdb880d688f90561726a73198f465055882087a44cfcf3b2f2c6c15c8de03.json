{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-70285036\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"task-card my-style\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"h4\", null, _toDisplayString($props.model.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($props.model.description), 1 /* TEXT */), _createElementVNode(\"h5\", null, _toDisplayString($props.model.authors), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.emitOnRemove && $setup.emitOnRemove(...args)),\n    class: \"remove\"\n  }, \"❌\")])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$props","model","title","description","authors","onClick","_cache","args","$setup","emitOnRemove"],"sources":["C:\\Users\\foxyp\\OneDrive\\Документы\\GitHub\\sait\\hello-world\\src\\components\\TaskCard.vue"],"sourcesContent":["<template>\n  <div class=\"task-card my-style\">\n    <div>\n      <h4>{{ model.title }}</h4>\n      <p>{{ model.description }}</p>\n      <h5>{{ model.authors }}</h5>\n    </div>\n    <div>\n      \n      <button @click=\"emitOnRemove\" v-else class=\"remove\">❌</button>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  emits: ['onDone', 'onRemove'],\n  props: {\n    model: {\n      required: true,\n      default: {\n        id: 0,\n        title: 'Создать',\n        description: 'Сайт',\n        authors: 'RenSeven',\n        status: false\n      }\n    }\n  },\n  setup(props, { emit }) {\n    const emitOnDone = () => {\n      emit('onDone')\n    }\n\n    const emitOnRemove = () => {\n      emit('onRemove')\n    }\n\n    return {\n      emitOnDone,\n      emitOnRemove\n    }\n  }\n}\n</script>\n\n<style scoped>\n.task-card {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAoB;;uBAA/BC,mBAAA,CAUM,OAVNC,UAUM,GATJC,mBAAA,CAIM,cAHJA,mBAAA,CAA0B,YAAAC,gBAAA,CAAnBC,MAAA,CAAAC,KAAK,CAACC,KAAK,kBAClBJ,mBAAA,CAA8B,WAAAC,gBAAA,CAAxBC,MAAA,CAAAC,KAAK,CAACE,WAAW,kBACvBL,mBAAA,CAA4B,YAAAC,gBAAA,CAArBC,MAAA,CAAAC,KAAK,CAACG,OAAO,iB,GAEtBN,mBAAA,CAGM,cADJA,mBAAA,CAA8D;IAArDO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,YAAA,IAAAD,MAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IAASZ,KAAK,EAAC;KAAS,GAAC,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}